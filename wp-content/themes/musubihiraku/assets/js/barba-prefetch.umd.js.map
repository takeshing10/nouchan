{"version":3,"file":"barba-prefetch.umd.js","sources":["../src/polyfills/requestIdleCallback.ts","../src/prefetch.ts"],"sourcesContent":["/**\n * @module prefetch/polyfills\n */\n/**\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// [source](https://github.com/GoogleChromeLabs/quicklink/blob/master/src/request-idle-callback.mjs)\n// RIC and shim for browsers setTimeout() without it\nexport const requestIdleCallback =\n  // @ts-ignore\n  window.requestIdleCallback ||\n  function ric(cb: any) {\n    const start = Date.now();\n\n    return setTimeout(() => {\n      cb({\n        didTimeout: false,\n        timeRemaining: function timeRemaining() {\n          return Math.max(0, 50 - (Date.now() - start));\n        },\n      });\n    }, 1);\n  };\n","/**\n * @barba/prefetch\n * <br><br>\n * ## Barba prefetch.\n *\n * @module prefetch\n * @preferred\n */\n\nimport { IPrefetchOptions } from './defs/prefetch';\n\n/***/\n\n// Definitions\nimport { Core } from '@barba/core/src/core';\nimport { IBarbaPlugin, Link } from '@barba/core/src/defs';\nimport { Logger } from '@barba/core/src/modules/Logger';\n\nimport { version } from '../package.json';\nimport { requestIdleCallback } from './polyfills';\n\nclass Prefetch implements IBarbaPlugin<IPrefetchOptions> {\n  public name = '@barba/prefetch';\n  public version = version;\n  public barba: Core;\n  public logger: Logger;\n\n  public observer: IntersectionObserver;\n  public root: HTMLElement | HTMLDocument;\n  public timeout: number;\n  public toPrefetch: Set<string> = new Set();\n\n  /**\n   * Plugin installation.\n   */\n  public install(\n    barba: Core,\n    { root = document.body, timeout = 2e3 }: IPrefetchOptions = {}\n  ) {\n    this.logger = new barba.Logger(this.name);\n    this.logger.info(this.version);\n    this.barba = barba;\n    this.root = root;\n    this.timeout = timeout;\n  }\n\n  /**\n   * Plugin initialisation.\n   */\n  public init() {\n    if (this.barba.prefetchIgnore) {\n      this.logger.warn('barba.prefetchIgnore is enabled');\n\n      return;\n    }\n    if (this.barba.cacheIgnore) {\n      this.logger.warn('barba.cacheIgnore is enabled');\n\n      return;\n    }\n\n    /**\n     * Init intersection observer\n     * when intersecting, it will check if URL should be prefetched\n     * then unobserve the element\n     * and, if no cache data, fetch the page\n     */\n    /* istanbul ignore next */\n    this.observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const link = entry.target as Link;\n          const href = this.barba.dom.getHref(link);\n\n          if (this.toPrefetch.has(href)) {\n            this.observer.unobserve(link);\n            // Prefetch and cache\n            if (!this.barba.cache.has(href)) {\n              this.barba.cache.set(\n                href,\n                this.barba\n                  .request(\n                    href,\n                    this.barba.timeout,\n                    this.barba['onRequestError'].bind(this.barba, 'barba') // tslint:disable-line:no-string-literal\n                  )\n                  .catch(error => {\n                    this.logger.error(error);\n                  }),\n                'prefetch'\n              );\n            } else {\n              this.barba.cache.update(href, { action: 'prefetch' });\n            }\n          }\n        }\n      });\n    });\n    this.observe();\n    // Register hooks\n    this.barba.hooks.after(this.observe, this);\n  }\n\n  /* istanbul ignore next */\n  public observe(): void {\n    const timeout = this.timeout;\n\n    requestIdleCallback(\n      () => {\n        // If not, find all links and use IntersectionObserver.\n        this.root.querySelectorAll('a').forEach(el => {\n          const link = (el as unknown) as Link;\n          const href = this.barba.dom.getHref(link);\n\n          if (\n            !this.barba.cache.has(href) &&\n            !this.barba.prevent.checkUrl(href) &&\n            !this.barba.prevent.checkLink(link, {} as Event, href)\n          ) {\n            this.observer.observe(el);\n            this.toPrefetch.add(href);\n          }\n        });\n      },\n      { timeout }\n    );\n  }\n}\n\nconst prefetch = new Prefetch();\n\nexport default prefetch;\n"],"names":["requestIdleCallback","window","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","Prefetch","constructor","Set","install","barba","ref","document","body","logger","Logger","this","name","info","version","root","timeout","init","prefetchIgnore","warn","cacheIgnore","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","link","target","href","dom","getHref","toPrefetch","has","unobserve","cache","update","set","request","bind","catch","error","observe","hooks","after","querySelectorAll","el","prevent","checkUrl","checkLink","add"],"mappings":"gLAqBaA,EAEXC,OAAOD,qBACP,SAAaE,OACLC,EAAQC,KAAKC,aAEZC,sBACLJ,EAAG,CACDK,YAAY,EACZC,cAAe,kBACNC,KAAKC,IAAI,EAAG,IAAMN,KAAKC,MAAQF,QAGzC,ICbDQ,EAANC,qBACgB,uDAQmB,IAAIC,YAK9BC,YAAAA,iBACLC,EACAC,kBAA4D,gCAAnDC,SAASC,qCAAgB,UAE7BC,OAAS,IAAIJ,EAAMK,OAAOC,KAAKC,WAC/BH,OAAOI,KAAKF,KAAKG,cACjBT,MAAQA,OACRU,KAAOA,OACPC,QAAUA,GAMVC,YAAAA,2BACDN,KAAKN,MAAMa,oBACRT,OAAOU,KAAK,mCAIfR,KAAKN,MAAMe,iBACRX,OAAOU,KAAK,sCAYdE,SAAW,IAAIC,8BAAqBC,GACvCA,EAAQC,iBAAQC,MACVA,EAAMC,eAAgB,KAClBC,EAAOF,EAAMG,OACbC,EAAOlB,EAAKN,MAAMyB,IAAIC,QAAQJ,GAEhChB,EAAKqB,WAAWC,IAAIJ,OACjBR,SAASa,UAAUP,GAEnBhB,EAAKN,MAAM8B,MAAMF,IAAIJ,KAenBxB,MAAM8B,MAAMC,OAAOP,EAAM,QAAU,eAdnCxB,MAAM8B,MAAME,IACfR,EACAlB,EAAKN,MACFiC,QACCT,EACAlB,EAAKN,MAAMW,QACXL,EAAKN,MAAL,eAA6BkC,KAAK5B,EAAKN,MAAO,UAE/CmC,eAAMC,KACAhC,OAAOgC,MAAMA,KAEtB,uBASPC,eAEArC,MAAMsC,MAAMC,MAAMjC,KAAK+B,QAAS/B,QAIhC+B,YAAAA,6CAMI3B,KAAK8B,iBAAiB,KAAKrB,iBAAQsB,OAChCnB,EAAQmB,EACRjB,EAAOlB,EAAKN,MAAMyB,IAAIC,QAAQJ,GAGjChB,EAAKN,MAAM8B,MAAMF,IAAIJ,IACrBlB,EAAKN,MAAM0C,QAAQC,SAASnB,IAC5BlB,EAAKN,MAAM0C,QAAQE,UAAUtB,EAAM,GAAaE,OAE5CR,SAASqB,QAAQI,KACjBd,WAAWkB,IAAIrB,OAI1B,SAnBclB,KAAKK,WAwBR,IAAIf"}